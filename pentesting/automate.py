import os
import subprocess
import datetime

def run_command(command):
    """Runs a command and returns the output."""
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True)
        return result.stdout.strip()
    except Exception as e:
        return str(e)

def scan_network(target):
    """Runs an Nmap scan on the target."""
    print(f"Scanning {target} with Nmap...")
    return run_command(f"nmap -A -T4 {target}")

def check_open_ports(target):
    """Uses Ncat to check open ports."""
    print(f"Checking open ports on {target}...")
    return run_command(f"nc -zv {target} 1-65535 2>&1")

def whois_lookup(target):
    """Performs a WHOIS lookup on the target."""
    print(f"Performing WHOIS lookup on {target}...")
    return run_command(f"whois {target}")

def generate_report(target, nmap_results, ports_results, whois_results):
    """Generates a markdown report of the findings."""
    timestamp = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    report_content = f"""
# Penetration Test Report

**Target:** {target}
**Date:** {timestamp}

## 1. Nmap Scan Results
```
{nmap_results}
```

## 2. Open Ports Scan (Ncat)
```
{ports_results}
```

## 3. WHOIS Lookup
```
{whois_results}
```

## 4. Findings & Fixes
- **Close unnecessary open ports.** Use firewall rules to block unused ports.
- **Ensure services are up to date.** Vulnerabilities might exist in outdated software.
- **Restrict WHOIS information.** Consider using domain privacy protection.

"""
    with open("pentest_report.md", "w") as report_file:
        report_file.write(report_content)
    print("Report generated: pentest_report.md")

if __name__ == "__main__":
    target = input("Enter the target IP or domain: ")
    
    nmap_results = scan_network(target)
    ports_results = check_open_ports(target)
    whois_results = whois_lookup(target)
    
    generate_report(target, nmap_results, ports_results, whois_results)
