package Taustaoperaatiot.test;
// Generated by ComTest BEGIN
import java.io.File;
import java.util.Iterator;
import static org.junit.Assert.*;
import org.junit.*;
import Taustaoperaatiot.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.04.23 11:43:32 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class PelaajatTest {



  // Generated by ComTest BEGIN
  /** 
   * testLisaa46 
   * @throws SailoException when error
   */
  @Test
  public void testLisaa46() throws SailoException {    // Pelaajat: 46
    Pelaajat pelaajat = new Pelaajat(); 
    Pelaaja sidney1 = new Pelaaja(), sidney2 = new Pelaaja(); 
    assertEquals("From: Pelaajat line: 50", 0, pelaajat.getLkm()); 
    pelaajat.lisaa(sidney1); assertEquals("From: Pelaajat line: 51", 1, pelaajat.getLkm()); 
    pelaajat.lisaa(sidney2); assertEquals("From: Pelaajat line: 52", 2, pelaajat.getLkm()); 
    pelaajat.lisaa(sidney1); assertEquals("From: Pelaajat line: 53", 3, pelaajat.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testPoista111 
   * @throws SailoException when error
   */
  @Test
  public void testPoista111() throws SailoException {    // Pelaajat: 111
    Pelaajat pelaajat = new Pelaajat(); 
    Pelaaja sidney1 = new Pelaaja(); 
    sidney1.rekisteroi(); 
    int id1 = sidney1.getPelaajaID(); 
    pelaajat.lisaa(sidney1); 
    assertEquals("From: Pelaajat line: 118", 1, pelaajat.poista(id1)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testAnnaPelaajaID137 
   * @throws SailoException when error
   */
  @Test
  public void testAnnaPelaajaID137() throws SailoException {    // Pelaajat: 137
    Pelaajat pelaajat = new Pelaajat(); 
    Pelaaja sidney1 = new Pelaaja(), sidney2 = new Pelaaja(); 
    sidney1.rekisteroi(); sidney2.rekisteroi(); 
    int id1 = sidney1.getPelaajaID(); 
    pelaajat.lisaa(sidney1); pelaajat.lisaa(sidney2); 
    assertEquals("From: Pelaajat line: 144", true, pelaajat.annaPelaajaID(id1) == sidney1); 
    assertEquals("From: Pelaajat line: 145", true, pelaajat.annaPelaajaID(id1+1) == sidney2); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta174 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedostosta174() throws SailoException {    // Pelaajat: 174
    Pelaajat pelaajat = new Pelaajat(); 
    Pelaaja sidney1 = new Pelaaja(), sidney2 = new Pelaaja(); 
    sidney1.dummyPelaaja(); 
    sidney2.dummyPelaaja(); 
    String hakemisto = "testikelmit"; 
    String tiedNimi = hakemisto+"/pelaajat"; 
    File ftied = new File(tiedNimi+".dat"); 
    File dir = new File(hakemisto); 
    dir.mkdir(); 
    ftied.delete(); 
    try {
    pelaajat.lueTiedostosta(tiedNimi); 
    fail("Pelaajat: 189 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    pelaajat.lisaa(sidney1); 
    pelaajat.lisaa(sidney2); 
    pelaajat.tallenna(); 
    pelaajat = new Pelaajat();  // Poistetaan vanhat luomalla uusi
    pelaajat.lueTiedostosta(tiedNimi);  // johon ladataan tiedot tiedostosta.
    Iterator<Pelaaja> i = pelaajat.iterator(); 
    assertEquals("From: Pelaajat line: 196", sidney1, i.next()); 
    assertEquals("From: Pelaajat line: 197", sidney2, i.next()); 
    assertEquals("From: Pelaajat line: 198", false, i.hasNext()); 
    pelaajat.lisaa(sidney2); 
    pelaajat.tallenna(); 
    assertEquals("From: Pelaajat line: 201", true, ftied.delete()); 
    File fbak = new File(tiedNimi+".bak"); 
    assertEquals("From: Pelaajat line: 203", true, fbak.delete()); 
    assertEquals("From: Pelaajat line: 204", true, dir.delete()); 
  } // Generated by ComTest END
}